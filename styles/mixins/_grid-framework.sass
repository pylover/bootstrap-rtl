// Framework grid generation
//
// Used only by Bootstrap to generate the correct number of grid classes given
// any value of `$grid-columns`.

// [converter] This is defined recursively in LESS, but Sass supports real loops
=make-grid-columns($i: 1, $list: ".col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}")
  @for $i from 1 + 1 through $grid-columns
    $list: "#{$list}, .col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}"
  #{$list}
    position: relative
    // Prevent columns from collapsing when empty
    min-height: 1px
    // Inner gutter via padding
    padding-left: $grid-gutter-width / 2
    padding-right: $grid-gutter-width / 2


// [converter] This is defined recursively in LESS, but Sass supports real loops
=float-grid-columns($class, $i: 1, $list: ".col-#{$class}-#{$i}")
  @for $i from 1 + 1 through $grid-columns
    $list: "#{$list}, .col-#{$class}-#{$i}"
  #{$list}
    float: $float

=calc-grid-column($index, $class, $type)
  @if $type == width and $index > 0
    .col-#{$class}-#{$index}
      width: percentage($index / $grid-columns)
  @if $type == push and $index > 0
    .col-#{$class}-push-#{$index}
      @if $direction == ltr
        left: percentage($index / $grid-columns)
      @else
        right: percentage($index / $grid-columns)
  @if $type == push and $index == 0
    .col-#{$class}-push-0
      @if $direction == ltr
        left: auto
      @else
        right: auto
  @if $type == pull and $index > 0
    .col-#{$class}-pull-#{$index}
      @if $direction == ltr
        right: percentage($index / $grid-columns)
      @else
        left: percentage($index / $grid-columns)
  @if $type == pull and $index == 0
    .col-#{$class}-pull-0
      @if $direction == ltr
        right: auto
      @else
        left: auto
  @if $type == offset
    .col-#{$class}-offset-#{$index}
      @if $direction == ltr
        margin-left: percentage($index / $grid-columns)
      @else
        margin-right: percentage($index / $grid-columns)

// [converter] This is defined recursively in LESS, but Sass supports real loops
=loop-grid-columns($columns, $class, $type)
  @for $i from 0 through $columns
    +calc-grid-column($i, $class, $type)

// Create grid for specific class
=make-grid($class)
  +float-grid-columns($class)
  +loop-grid-columns($grid-columns, $class, width)
  +loop-grid-columns($grid-columns, $class, pull)
  +loop-grid-columns($grid-columns, $class, push)
  +loop-grid-columns($grid-columns, $class, offset)
